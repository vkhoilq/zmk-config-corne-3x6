/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 // left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // right-hand keys
#define THUMBS 36 37 38 39 40 41
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: hold_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hmr: hold_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        morph_shift_paranthesis: morph_shift_paranthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_SHIFT_PARANTHESIS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        nav_word: nav_word {
            compatible = "zmk,behavior-auto-layer";
            #binding-cells = <1>;
            continue-list = <LEFT DOWN UP RIGHT PG_DN PG_UP>;
            ignore-modifiers;
        };

        num_word: num_word {
            compatible = "zmk,behavior-auto-layer";
            #binding-cells = <1>;
            continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
            ignore-numbers;
        };

        td_capsword_tab: td_capsword_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPSWORD_TAB";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&caps_word>;

            tapping-term-ms = <80>;
        };

        morph_shift_apostrop: morph_shift_apostrop {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_SHIFT_APOSTROP";
            bindings = <&kp DOUBLE_QUOTES>, <&kp SINGLE_QUOTE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        morph_shift_minus: morph_shift_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_SHIFT_MINUS";
            bindings = <&kp UNDERSCORE>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        morph_shift_bracket: morph_shift_bracket {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_SHIFT_BRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        morph_shift_open: morph_shift_open {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_SHIFT_OPEN";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        BT_CLEAR {
            bindings = <&CL_BT>;
            key-positions = <0 12 24>;
            layers = <0>;
        };

        cb_minus_underscore {
            bindings = <&morph_shift_minus>;
            key-positions = <30 31>;
            layers = <0>;
        };

        cb_equal_plus {
            bindings = <&kp EQUAL>;
            key-positions = <31 32>;
            layers = <0>;
        };

        cb_left_bracket {
            bindings = <&morph_shift_bracket>;
            key-positions = <27 28>;
            layers = <0>;
        };

        cb_right_bracket {
            bindings = <&morph_shift_open>;
            key-positions = <28 29>;
            layers = <0>;
        };

        soft_off {
            bindings = <&mc_softoff>;
            key-positions = <24 25 26 27>;
        };

        cb_paranthesis {
            bindings = <&morph_shift_paranthesis>;
            key-positions = <32 33>;
            layers = <0>;
        };

        cb_num_smart_layer {
            bindings = <&num_word 2>;
            key-positions = <39 40>;
            layers = <0>;
        };

        cb_nav_smart_layer {
            bindings = <&nav_word 2>;
            key-positions = <40 41>;
            layers = <0>;
        };

        cb_apostro {
            bindings = <&morph_shift_apostrop>;
            key-positions = <26 27>;
            layers = <0>;
        };

        cb_backcaps {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 4>;
        };

        cb_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
        };

        cb_right {
            bindings = <&kp RIGHT>;
            key-positions = <3 5>;
        };
    };

    macros {
        pdw: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp AT &kp LS(T) &kp I &kp N0 &kp N2 &kp C &kp A &kp N0 &kp N9>;
            label = "NEW_MACRO";
        };

        ENTER_VIM_COMMAND: ENTER_VIM_COMMAND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON>;
            label = "ENTER_VIM_COMMAND";
        };

        EN_BT0: EN_BT0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 0 &rgb_ug RGB_TOG>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_TOG>;

            label = "EN_BT0";
        };

        EN_BT1: EN_BT1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 1 &rgb_ug RGB_TOG>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_TOG>;

            label = "EN_BT1";
        };

        EN_BT2: EN_BT2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 2 &rgb_ug RGB_TOG>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_TOG>;

            label = "EN_BT2";
        };

        CL_BT: CL_BT0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_CLR &rgb_ug RGB_TOG>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_TOG>;

            label = "CL_BT0";
        };

        mc_softoff: mc_softoff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_TOG &soft_off &rgb_ug RGB_TOG>;
            label = "MC_SOFTOFF";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&td_capsword_tab  &kp Q            &kp W            &kp E                &kp R              &kp T        &kp Y              &kp U               &kp I         &kp O             &kp P                     &kp BSLH
&kp LALT          &hml LEFT_WIN A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G        &kp H              &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp LCTRL         &kp Z            &kp X            &kp C                &kp V              &kp B        &kp N              &kp M               &kp COMMA     &kp DOT           &kp FSLH                  &kp GRAVE
                                                    &lt 3 ESCAPE         &lt 2 BACKSPACE    &lt 4 TAB    &lt 2 RIGHT_ARROW  &kp SPACE           &kp ENTER
            >;
        };

        lower_layer {
            display-name = "RESERVED";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5             &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&none   &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans             &kp INS          &kp DEL          &trans
            >;
        };

        raise_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5                        &kp NUMBER_6  &kp N7                    &kp N8           &kp N9         &kp N0  &kp INSERT
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &kp LS(LC(INSERT))            &kp HOME      &mt RIGHT_SHIFT UP_ARROW  &kp END          &kp PAGE_UP    &trans  &trans
&trans  &trans        &trans        &none         &none           &ENTER_VIM_COMMAND            &kp LEFT      &kp DOWN_ARROW            &kp RIGHT_ARROW  &kp PAGE_DOWN  &trans  &trans
                                    &trans        &trans          &mt LEFT_SHIFT RIGHT_ARROW    &kp RET       &kp SPACE                 &kp ENTER
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&bt BT_SEL 0  &rgb_ug RGB_TOG  &pdw    &trans              &kp LA(UP_ARROW)    &trans                 &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&bt BT_SEL 1  &bt BT_SEL 3     &trans  &kp LA(LEFT_ARROW)  &kp LA(DOWN_ARROW)  &kp LA(RIGHT_ARROW)    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_SEL 2  &out OUT_TOG     &trans  &trans              &trans              &kp LC(LEFT_SHIFT)     &trans  &trans  &trans  &trans   &trans   &trans
                                       &trans              &trans              &trans                 &trans  &trans  &trans
            >;
        };

        layer_4 {
            display-name = "MOUSE";
            bindings = <
&trans         &trans  &trans     &trans     &trans     &trans                    &trans          &trans          &trans           &trans          &trans  &trans
&trans         &trans  &trans     &trans     &trans     &kp LC(LG(LEFT_ARROW))    &trans          &mmv MOVE_UP    &trans           &msc SCRL_UP    &trans  &trans
&kp LG(LS(S))  &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(LG(RIGHT))         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans  &trans
                                  &trans     &trans     &trans                    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "TV_REMOTE";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
